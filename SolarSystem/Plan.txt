=========================================IN THIS COMMIT==========================================
Going through TODO list.
========================================IMPLEMENTING PLAN========================================
Next:
	Done with basic features?
	TODOs, asserts, exceptions, COMMENTS
	Bonuses:
		- textures, bloom, lens flare - easy
		- rings with instanced asteroids - medium
			- 
		- atmosphere, tesselation - hard
		- Kepler - tedious
			- Might add simMethod for fixed hiearchy
				- needs parser too, or just build it from initial values(biggest force)
		- constrait system for System Units
			- compile time version for hard constraints and run-time for optional features
		- rename Unit to object...

TODOs/IDEAS:
	Add Inverses of matrices in UBO in camera class if needed.
	Add ring around selected planets and on hover.
4.	Graphs - object's energy is not implemented 
	Graphs tweaks
5.		- better grid system, this one looks weird when zooming
		- Scientific notation - labels and input ranges, checkbox for autoscale 
6.		- maybe preview on hover over the list instead of side window
		- csv export wouldn't be too hard
		- separate window resizing - part of whole UI resize thing
	Grid
		- could make fadeRange smoother
		- pinheads base could change smoothly
7.		- comments
8.		- apply fadeRange to pinhead
9.	VAOs for every render, apparently it might not draw without them on some machines.
!!	Camera
		- near, far plane? Zoom limits?
		- disable ortho? Has limited precision and its not used much anyway
	Create some Coordinate system hiearchy 
		- //TESTed in SimDataDrawer
		- atleast relative to camera?
10.		- grid is doable

After-Plan:
		- ExtraInfo* for formatted parser
		- Textured Planets
		- Fix the coordinates
			- octree
		- better visuals
			- lens-flare, bloom
			- instanced rings
			- precomputed atmosphere		
			- nice milky way background 
		- Kepler with all trajectories
			- fixed hiearchy calculated at init
		- Proper SystemUnit traits and promises
		- Launch window and different resolutions support
		- Go back to Replayer?

		OpenGL state machine - OpenGLSM
			- maybe little bit of overkill for now

Remarks:
	Acknowledge third parties in documentation.
	Well, reorganize documentation.
		- probably not worth the effort.
		- but moving user guide to beggining is doable.
	Resolve speeding/slowing down while recording.
		- won't be easy - either we loose O(1) search in file or we get wrong replaying speed
			- went for wrong replaying speed for now

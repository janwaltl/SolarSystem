=========================================IN THIS COMMIT==========================================
Implemented Non-RealScale.
========================================IMPLEMENTING PLAN========================================
Next:
	3D objects
		- blin phong spheres, sun as a point light
		- add stuff to formatted file parser?
			

	Done with basic features?
	TODOs, asserts, exceptions, COMMENTS
	Bonuses:
		- textures, bloom, lens flare - easy
		- rings with instanced asteroids - medium
			- 
		- atmosphere, tesselation - hard
		- Kepler - tedious
			- Might add simMethod for fixed hiearchy
				- needs parser too, or just build it from initial values(biggest force)
		- constrait system for System Units
			- compile time version for hard constraints and run-time for optional features
		- rename Unit to object...

TODOs/IDEAS:
	Add Inverses of matrices in UBO in camera class if needed.
	Add exceptions in OpenGLBackend when there are missing extensions/older GL version
	Fix all Begin/End for windows
	Decide on Ratio class
		- too much work with operators, but it distinguishes it from simple double
!!	Graphs - object's energy is not implemented 
	Graphs tweaks
		- better grid system, this one looks weird when zooming
		- Scientific notation - labels and input ranges, checkbox for autoscale 
		- maybe preview on hover over the list instead of side window
		- csv export would be too hard
		- separate window resizing - part of whole UI resize thing
	Grid
		- could make fadeRange smoother
		- pinheads base could change smoothly

	VAOs for every render, apparently it might not draw without them on some machines.
	Camera
		- near, far plane? Zoom limits?
		- disable ortho? Has limited precision and its not used much anyway
	Create some Coordinate system hiearchy 
		- //TEST in SimDataDrawer
		- atleast relative to camera?
Plan:
	UI overhaul:
		- Top-bar with dropdown windows
			- TopBar
				- StateButtons to open individual windows
				- Center:
					- play, pause, resume
			- SimControls
				- just current SimControls
				- usage statistics
				- save/load/restart
				- name of current simMethod?
				- tickbox for break on collision?
				- graph of frameTime,FPS?
					- with stability line
			- SimData - Done
			- CameraControls - Done
			- Graphs - Done
			- Visuals
				- controls visual guidances:
					- visual trackball - make it smaller to allow easier rolling
						- change size, position? (But keep it in screen coords)
					- camTarget indicator
					- UI for object
						- shows name on hover
						- when selected(on click) shows small window
							- Name, set as target(follow), set as ref frame
	Bonuses:
		Make Planets colored spheres
		And add shading with sun as lightsource
			- per-pixel, bloom
		Kepler with all trajectories
			- would require hiearchy system in simData and input files
				- wouldn't be too hard
		Dynamic addition of objects
			- could be done for stopped simulation
				- would require viewer, simMethods and parser respond to these changes
					- probably SystemUnit::UnitAdded/Removed(index) would be fine
		OpenGL state machine - OpenGLSM
			- maybe little bit of overkill for now

Remarks:
	Acknowledge third parties in documentation.
	Well, reorganize documentation.
		- probably not worth the effort.
		- but moving user guide to beggining is doable.
	Resolve speeding/slowing down while recording.
		- won't be easy - either we loose O(1) search in file or we get wrong replaying speed
			- went for wrong replaying speed for now

=========================================IN THIS COMMIT==========================================
Fixes in context menu and OpeGL backend.
Tweaks in graphs
	- force autoscale, removed ranges
	- got calculating system energy right for good.
	- temporarely disabled object energy.
		- exclude origin
Fix: Now correct aspectRatio is passed to Camera classes.
========================================IMPLEMENTING PLAN========================================
Next:
	Done with basic features?
	TODOs, asserts, exceptions, COMMENTS
	Bonuses:
		- textures, bloom, lens flare - easy
		- rings with instanced asteroids - medium
		- atmosphere, tesselation - hard
		- Kepler - tedious
			- Might add simMethod for fixed hiearchy
				- needs parser too, or just build it from initial values(biggest force)
		- constrait system for System Units
			- compile time version for hard constraints and run-time for optional features
		- rename Unit to object...

TODOs/IDEAS:
	Add Inverses of matrices in UBO in camera class if needed.
	Add ring around selected planets and on hover.

	Grid
		- could make fadeRange smoother
		- pinheads base could change smoothly
9. Add radius support to FormattedFileParser
10. Make sure Replayer is working, atleast not crashing and that UI is working
	- does not work, there's no support for PhysUnits
		- add to serializer, as well as radius(to same place as mass)
		- other than that it should work
!!	Camera
		- near, far plane? Zoom limits?
		- disable ortho? Has limited precision and its not used much anyway
	Create some Coordinate system hiearchy 
		- //TESTed in SimDataDrawer
After-Plan:
		- ExtraInfo* for formatted parser
			- really design the Parser/SimMethod/Viewer communication
				- keep SystemUnit pure virtual
				- each derived class must specialize Trait class
					- either traits for each P/S/V or just one
				- Simulation's templated constructor checks traits for compatibility
					- one trait can be type of SimData

		- Textured Planets
		- Fix the coordinates
			- octree
				-	double for planet positions is more than enough
				-	double for planet rendering or cells of floats(cellSize can be 1Earth radius with roughly one meter precision)
						- procedural tessalated planet would be fine without it as it can be generated already relative to camera
						- but asteroid rings/sattellites can use the cells
		- better visuals
			- lens-flare, bloom
			- instanced rings
			- precomputed atmosphere		
			- nice milky way background 
		- Kepler with all trajectories
			- fixed hiearchy calculated at init
		- Proper SystemUnit traits and promises
		- Launch window and different resolutions support
		- Go back to Replayer?

		OpenGL state machine - OpenGLSM
			- maybe little bit of overkill for now

Remarks:
	Acknowledge third parties in documentation.
	Well, reorganize documentation.
		- probably not worth the effort.
		- but moving user guide to beggining is doable.
	Resolve speeding/slowing down while recording.
		- won't be easy - either we loose O(1) search in file or we get wrong replaying speed
			- went for wrong replaying speed for now
